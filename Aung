# n = int(input())
# result = 1;
# for i in range(1,n+1):
#     result = result * i

# print("fatorial result" + str(result))
# import functools
# factorial = int(input())
# number = functools.reduce(lambda x,y: x*y ,range(1, factorial+1))
# print(number)
    
    
# def median(a,b,c):
#     # Sort the three integers in ascending order
#     sorted_numbers = sorted([a, b, c])
#     # Return the middle integer
#     return sorted_numbers[1]

# # Read three integers from input
# values = input().split()
# for i in values:
#     a,b,c = map(int, values)


# # Find and print the median
# print( median(a,b,c))

# def will_meet(a1, a2, b1, b2):
#     # Checking if A and B are initially at the same position
#     if a1 == b1:
#         return "Yes 0"

#     # Checking if A and B have the same speed, they will never meet unless they start at the same point
#     if a2 == b2:
#         return "No"

#     # Calculating the relative speed
#     relative_speed = a2 - b2

#     # Checking if A and B will ever meet
#     if (b1 - a1) % relative_speed == 0:
#         time_to_meet = (b1 - a1) // relative_speed
#         if time_to_meet >= 0:
#             return "Yes " + str(time_to_meet)
    
#     return "No"

# # Sample Input
# a1, a2, b1, b2 = map(int, input().split())
# print(will_meet(a1, a2, b1, b2))
# Output

# num = int(input(""))
# num_start = 0 
# num_next = 1
# if num == 1 :
#        result = 1
# elif num == 0:
#         result = 0
# else:
#     i=2
#     while i <=num:
#         numf = num_start + num_next
#         num_start = num_next
#         num_next =numf
#         i+=1
#     result = num_next
# print(result)
